/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.3
// source: manager.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as manager_pb from './manager_pb'; // proto import: "manager.proto"


export class ManagerWorkerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSetTaskClientConfig = new grpcWeb.MethodDescriptor(
    '/proto.ManagerWorker/SetTaskClientConfig',
    grpcWeb.MethodType.UNARY,
    manager_pb.TaskClientRequest,
    manager_pb.None,
    (request: manager_pb.TaskClientRequest) => {
      return request.serializeBinary();
    },
    manager_pb.None.deserializeBinary
  );

  setTaskClientConfig(
    request: manager_pb.TaskClientRequest,
    metadata?: grpcWeb.Metadata | null): Promise<manager_pb.None>;

  setTaskClientConfig(
    request: manager_pb.TaskClientRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void): grpcWeb.ClientReadableStream<manager_pb.None>;

  setTaskClientConfig(
    request: manager_pb.TaskClientRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.ManagerWorker/SetTaskClientConfig',
        request,
        metadata || {},
        this.methodDescriptorSetTaskClientConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.ManagerWorker/SetTaskClientConfig',
    request,
    metadata || {},
    this.methodDescriptorSetTaskClientConfig);
  }

  methodDescriptorSetApiClientConfig = new grpcWeb.MethodDescriptor(
    '/proto.ManagerWorker/SetApiClientConfig',
    grpcWeb.MethodType.UNARY,
    manager_pb.ApiClientRequest,
    manager_pb.None,
    (request: manager_pb.ApiClientRequest) => {
      return request.serializeBinary();
    },
    manager_pb.None.deserializeBinary
  );

  setApiClientConfig(
    request: manager_pb.ApiClientRequest,
    metadata?: grpcWeb.Metadata | null): Promise<manager_pb.None>;

  setApiClientConfig(
    request: manager_pb.ApiClientRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void): grpcWeb.ClientReadableStream<manager_pb.None>;

  setApiClientConfig(
    request: manager_pb.ApiClientRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.ManagerWorker/SetApiClientConfig',
        request,
        metadata || {},
        this.methodDescriptorSetApiClientConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.ManagerWorker/SetApiClientConfig',
    request,
    metadata || {},
    this.methodDescriptorSetApiClientConfig);
  }

  methodDescriptorSetGpcCredentials = new grpcWeb.MethodDescriptor(
    '/proto.ManagerWorker/SetGpcCredentials',
    grpcWeb.MethodType.UNARY,
    manager_pb.GcpCredentialsRequest,
    manager_pb.None,
    (request: manager_pb.GcpCredentialsRequest) => {
      return request.serializeBinary();
    },
    manager_pb.None.deserializeBinary
  );

  setGpcCredentials(
    request: manager_pb.GcpCredentialsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<manager_pb.None>;

  setGpcCredentials(
    request: manager_pb.GcpCredentialsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void): grpcWeb.ClientReadableStream<manager_pb.None>;

  setGpcCredentials(
    request: manager_pb.GcpCredentialsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.ManagerWorker/SetGpcCredentials',
        request,
        metadata || {},
        this.methodDescriptorSetGpcCredentials,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.ManagerWorker/SetGpcCredentials',
    request,
    metadata || {},
    this.methodDescriptorSetGpcCredentials);
  }

  methodDescriptorSetGcpProjectId = new grpcWeb.MethodDescriptor(
    '/proto.ManagerWorker/SetGcpProjectId',
    grpcWeb.MethodType.UNARY,
    manager_pb.GcpProjectIdRequest,
    manager_pb.None,
    (request: manager_pb.GcpProjectIdRequest) => {
      return request.serializeBinary();
    },
    manager_pb.None.deserializeBinary
  );

  setGcpProjectId(
    request: manager_pb.GcpProjectIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<manager_pb.None>;

  setGcpProjectId(
    request: manager_pb.GcpProjectIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void): grpcWeb.ClientReadableStream<manager_pb.None>;

  setGcpProjectId(
    request: manager_pb.GcpProjectIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: manager_pb.None) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.ManagerWorker/SetGcpProjectId',
        request,
        metadata || {},
        this.methodDescriptorSetGcpProjectId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.ManagerWorker/SetGcpProjectId',
    request,
    metadata || {},
    this.methodDescriptorSetGcpProjectId);
  }

  methodDescriptorGetServiceId = new grpcWeb.MethodDescriptor(
    '/proto.ManagerWorker/GetServiceId',
    grpcWeb.MethodType.UNARY,
    manager_pb.None,
    manager_pb.IdResponse,
    (request: manager_pb.None) => {
      return request.serializeBinary();
    },
    manager_pb.IdResponse.deserializeBinary
  );

  getServiceId(
    request: manager_pb.None,
    metadata?: grpcWeb.Metadata | null): Promise<manager_pb.IdResponse>;

  getServiceId(
    request: manager_pb.None,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: manager_pb.IdResponse) => void): grpcWeb.ClientReadableStream<manager_pb.IdResponse>;

  getServiceId(
    request: manager_pb.None,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: manager_pb.IdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.ManagerWorker/GetServiceId',
        request,
        metadata || {},
        this.methodDescriptorGetServiceId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.ManagerWorker/GetServiceId',
    request,
    metadata || {},
    this.methodDescriptorGetServiceId);
  }

}

